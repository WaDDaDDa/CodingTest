//문제 설명
//괄호가 바르게 짝지어졌다는 것은 '(' 문자로 열렸으면 반드시 짝지어서 ')' 문자로 닫혀야 한다는 뜻입니다.예를 들어
//
//"()()" 또는 "(())()" 는 올바른 괄호입니다.
//")()(" 또는 "(()(" 는 올바르지 않은 괄호입니다.
//'(' 또는 ')' 로만 이루어진 문자열 s가 주어졌을 때, 문자열 s가 올바른 괄호이면 true를 return 하고,
//  올바르지 않은 괄호이면 false를 return 하는 solution 함수를 완성해 주세요.
//
//제한사항
//문자열 s의 길이 : 100, 000 이하의 자연수
//문자열 s는 '(' 또는 ')' 로만 이루어져 있습니다.


#include <string>
#include <iostream>

// 파라미터로 주어지는 문자열은 const로 주어집니다. 변경하려면 문자열을 복사해서 사용하세요.
//bool solution(const std::string& _Str)
//{
//    int LeftValue = 0;
//    int RightValue = 0;
//
//    bool answer = false;
//
//    for (size_t i = 0; i < _Str.size(); i++)
//    {
//        if (_Str.c_str()[i] == '(')
//        {
//            LeftValue++;
//        }
//        else if (_Str.c_str()[i] == ')')
//        {
//            RightValue++;
//        }
//
//        if (LeftValue < RightValue)
//        {
//            answer = false;
//            return answer;
//        }
//    }
//
//
//    if (LeftValue == RightValue)
//    {
//        answer = true;
//    }
//    
//    return answer;
//
//}

bool solution(std::string s)
{
    int LeftValue = 0;
    int RightValue = 0;

    std::string _Str = s;

    bool answer = false;

    for (size_t i = 0; i < _Str.size(); i++)
    {
        if (_Str.c_str()[i] == '(')
        {
            LeftValue++;
        }
        else if (_Str.c_str()[i] == ')')
        {
            RightValue++;
        }

        if (LeftValue < RightValue)
        {
            answer = false;
            return answer;
        }
    }


    if (LeftValue == RightValue)
    {
        answer = true;
    }

    return answer;
}

void main()
{ 
    bool A = solution("()()");
    bool B = solution("(())()");
    bool C = solution(")()(");
    bool D = solution("(()(");

    int a = 0;

}